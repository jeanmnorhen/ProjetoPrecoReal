name: CI/CD de Microsserviços e Frontend

on:
  push:
    branches:
      - master
    paths:
      - 'services/**'
      - 'frontend-tester/**'

jobs:
  deploy-microservices:
    runs-on: ubuntu-latest
    outputs:
      servico_usuarios_url: ${{ steps.deploy_servico_usuarios.outputs.url }}
      servico_busca_url: ${{ steps.deploy_servico_busca.outputs.url }}
      servico_monitoramento_url: ${{ steps.deploy_servico_monitoramento.outputs.url }}
      servico_agentes_ia_url: ${{ steps.deploy_servico_agentes_ia.outputs.url }}
      servico_lojas_url: ${{ steps.deploy_servico_lojas.outputs.url }}
      servico_ofertas_url: ${{ steps.deploy_servico_ofertas.outputs.url }}
      servico_produtos_url: ${{ steps.deploy_servico_produtos.outputs.url }}
      servico_healthcheck_url: ${{ steps.deploy_servico_healthcheck.outputs.url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          npm install -g vercel@latest
          sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy Microservice - servico-usuarios
        id: deploy_servico_usuarios
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-usuarios
          vercel_project_name: servico-usuarios
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-busca
        id: deploy_servico_busca
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-busca
          vercel_project_name: servico-busca
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-monitoramento
        id: deploy_servico_monitoramento
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-monitoramento
          vercel_project_name: servico-monitoramento
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-agentes-ia
        id: deploy_servico_agentes_ia
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_agentes_ia
          vercel_project_name: servicoagentes
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-lojas
        id: deploy_servico_lojas
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_lojas
          vercel_project_name: servicolojas
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-ofertas
        id: deploy_servico_ofertas
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_ofertas
          vercel_project_name: servicoofertas
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-produtos
        id: deploy_servico_produtos
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-produtos
          vercel_project_name: servico-produtos
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-healthcheck
        id: deploy_servico_healthcheck
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_healthcheck
          vercel_project_name: servico-healthcheck
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }} 
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

  update-frontend-and-deploy:
    runs-on: ubuntu-latest
    needs: deploy-microservices
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Update Frontend Environment Variables on Vercel
        run: |
          FRONTEND_PROJECT_ID="${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}"
          ORG_ID="${{ secrets.VERCEL_ORG_ID }}"
          VERCEL_TOKEN="${{ secrets.VERCEL_TOKEN }}"

          if [ -n "${{ needs.deploy-microservices.outputs.servico_usuarios_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_USERS_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_usuarios_url }}"
            vercel env add "NEXT_PUBLIC_USERS_API_URL" "${{ needs.deploy-microservices.outputs.servico_usuarios_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_USERS_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_busca_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_SEARCH_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_busca_url }}"
            vercel env add "NEXT_PUBLIC_SEARCH_API_URL" "${{ needs.deploy-microservices.outputs.servico_busca_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_SEARCH_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_monitoramento_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_MONITORING_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_monitoramento_url }}"
            vercel env add "NEXT_PUBLIC_MONITORING_API_URL" "${{ needs.deploy-microservices.outputs.servico_monitoramento_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_MONITORING_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_agentes_ia_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_AI_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_agentes_ia_url }}"
            vercel env add "NEXT_PUBLIC_AI_API_URL" "${{ needs.deploy-microservices.outputs.servico_agentes_ia_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_AI_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_lojas_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_STORES_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_lojas_url }}"
            vercel env add "NEXT_PUBLIC_STORES_API_URL" "${{ needs.deploy-microservices.outputs.servico_lojas_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_STORES_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_ofertas_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_OFFERS_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_ofertas_url }}"
            vercel env add "NEXT_PUBLIC_OFFERS_API_URL" "${{ needs.deploy-microservices.outputs.servico_ofertas_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_OFFERS_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_produtos_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_PRODUCTS_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_produtos_url }}"
            vercel env add "NEXT_PUBLIC_PRODUCTS_API_URL" "${{ needs.deploy-microservices.outputs.servico_produtos_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_PRODUCTS_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

          if [ -n "${{ needs.deploy-microservices.outputs.servico_healthcheck_url }}" ]; then
            echo "Atualizando variável de ambiente Vercel: NEXT_PUBLIC_HEALTHCHECK_API_URL com URL: ${{ needs.deploy-microservices.outputs.servico_healthcheck_url }}"
            vercel env add "NEXT_PUBLIC_HEALTHCHECK_API_URL" "${{ needs.deploy-microservices.outputs.servico_healthcheck_url }}" --scope "$ORG_ID" --project "$FRONTEND_PROJECT_ID" --token "$VERCEL_TOKEN" --yes
          else
            echo "Variável de ambiente NEXT_PUBLIC_HEALTHCHECK_API_URL não atualizada, pois o serviço correspondente não foi implantado."
          fi

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: frontend-tester

      - name: Build Frontend
        run: npm run build
        working-directory: frontend-tester
        env:
          NEXT_PUBLIC_USERS_API_URL: ${{ needs.deploy-microservices.outputs.servico_usuarios_url }}
          NEXT_PUBLIC_SEARCH_API_URL: ${{ needs.deploy-microservices.outputs.servico_busca_url }}
          NEXT_PUBLIC_MONITORING_API_URL: ${{ needs.deploy-microservices.outputs.servico_monitoramento_url }}
          NEXT_PUBLIC_AI_API_URL: ${{ needs.deploy-microservices.outputs.servico_agentes_ia_url }}
          NEXT_PUBLIC_STORES_API_URL: ${{ needs.deploy-microservices.outputs.servico_lojas_url }}
          NEXT_PUBLIC_OFFERS_API_URL: ${{ needs.deploy-microservices.outputs.servico_ofertas_url }}
          NEXT_PUBLIC_PRODUCTS_API_URL: ${{ needs.deploy-microservices.outputs.servico_produtos_url }}
          NEXT_PUBLIC_HEALTHCHECK_API_URL: ${{ needs.deploy-microservices.outputs.servico_healthcheck_url }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      - name: Deploy Frontend to Vercel
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --confirm
        working-directory: frontend-tester