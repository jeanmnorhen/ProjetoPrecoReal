name: CI/CD de MicrosserviÃ§os e Frontend

on:
  push:
    branches:
      - master
    paths:
      - 'services/**'
      - 'frontend-tester/**'

jobs:
  test-microservices:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install pytest
        run: pip install pytest

      - name: Run tests for servico-usuarios
        run: |
          pip install -r services/servico-usuarios/requirements.txt
          pytest services/servico-usuarios/tests

      - name: Run tests for servico-busca
        run: |
          pip install -r services/servico-busca/requirements.txt
          pytest services/servico-busca/tests

      - name: Run tests for servico-monitoramento
        run: |
          pip install -r services/servico-monitoramento/requirements.txt
          pytest services/servico-monitoramento/tests

      - name: Run tests for servico-agentes-ia
        run: |
          pip install -r services/servico_agentes_ia/requirements.txt
          pytest services/servico_agentes_ia/tests

      - name: Run tests for servico-lojas
        run: |
          pip install -r services/servico_lojas/requirements.txt
          pytest services/servico_lojas/tests

      - name: Run tests for servico-ofertas
        run: |
          pip install -r services/servico_ofertas/requirements.txt
          pytest services/servico_ofertas/tests

      - name: Run tests for servico-produtos
        run: |
          pip install -r services/servico-produtos/requirements.txt
          pytest services/servico-produtos/tests

      - name: Run tests for servico-healthcheck
        run: |
          pip install -r services/servico_healthcheck/requirements.txt
          pytest services/servico_healthcheck/tests

  deploy-microservices:
    runs-on: ubuntu-latest
    needs: test-microservices
    outputs:
      servico_usuarios_url: ${{ steps.deploy_servico_usuarios.outputs.url }}
      servico_busca_url: ${{ steps.deploy_servico_busca.outputs.url }}
      servico_monitoramento_url: ${{ steps.deploy_servico_monitoramento.outputs.url }}
      servico_agentes_ia_url: ${{ steps.deploy_servico_agentes_ia.outputs.url }}
      servico_lojas_url: ${{ steps.deploy_servico_lojas.outputs.url }}
      servico_ofertas_url: ${{ steps.deploy_servico_ofertas.outputs.url }}
      servico_produtos_url: ${{ steps.deploy_servico_produtos.outputs.url }}
      servico_healthcheck_url: ${{ steps.deploy_servico_healthcheck.outputs.url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          npm install -g vercel@latest
          sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy Microservice - servico-usuarios
        id: deploy_servico_usuarios
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-usuarios
          vercel_project_name: servico-usuarios
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-busca
        id: deploy_servico_busca
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-busca
          vercel_project_name: servico-busca
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-monitoramento
        id: deploy_servico_monitoramento
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-monitoramento
          vercel_project_name: servico-monitoramento
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-agentes-ia
        id: deploy_servico_agentes_ia
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_agentes_ia
          vercel_project_name: servicoagentes
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-lojas
        id: deploy_servico_lojas
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_lojas
          vercel_project_name: servicolojas
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-ofertas
        id: deploy_servico_ofertas
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_ofertas
          vercel_project_name: servicoofertas
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-produtos
        id: deploy_servico_produtos
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico-produtos
          vercel_project_name: servico-produtos
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Microservice - servico-healthcheck
        id: deploy_servico_healthcheck
        uses: ./.github/actions/deploy-service
        with:
          service_path: services/servico_healthcheck
          vercel_project_name: servico-healthcheck
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}

      - name: Make update script executable
        run: chmod +x .github/scripts/update-env-vars.sh

      - name: Update consumers of servico-usuarios
        if: steps.deploy_servico_usuarios.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_USUARIOS_URL ${{ steps.deploy_servico_usuarios.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-busca
        if: steps.deploy_servico_busca.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_BUSCA_URL ${{ steps.deploy_servico_busca.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-monitoramento
        if: steps.deploy_servico_monitoramento.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_MONITORAMENTO_URL ${{ steps.deploy_servico_monitoramento.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-agentes-ia
        if: steps.deploy_servico_agentes_ia.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_AGENTES_IA_URL ${{ steps.deploy_servico_agentes_ia.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-lojas
        if: steps.deploy_servico_lojas.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_LOJAS_URL ${{ steps.deploy_servico_lojas.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-ofertas
        if: steps.deploy_servico_ofertas.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_OFERTAS_URL ${{ steps.deploy_servico_ofertas.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-produtos
        if: steps.deploy_servico_produtos.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_PRODUTOS_URL ${{ steps.deploy_servico_produtos.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update consumers of servico-healthcheck
        if: steps.deploy_servico_healthcheck.outputs.should_deploy == 'true'
        run: ./.github/scripts/update-env-vars.sh SERVICO_HEALTHCHECK_URL ${{ steps.deploy_servico_healthcheck.outputs.url }} ${{ secrets.VERCEL_ORG_ID }} ${{ secrets.VERCEL_TOKEN }}

      - name: Update Frontend Environment Variables
        shell: bash
        run: |
          echo "--- Updating environment for project: frontend-tester ---"
          cd frontend-tester
          vercel link --project frontend-tester --scope="${{ secrets.VERCEL_ORG_ID }}" --token="${{ secrets.VERCEL_TOKEN }}" --yes

          ENV_VARS=(
            "NEXT_PUBLIC_USERS_API_URL"
            "NEXT_PUBLIC_SEARCH_API_URL"
            "NEXT_PUBLIC_MONITORING_API_URL"
            "NEXT_PUBLIC_AI_API_URL"
            "NEXT_PUBLIC_STORES_API_URL"
            "NEXT_PUBLIC_OFFERS_API_URL"
            "NEXT_PUBLIC_PRODUCTS_API_URL"
            "NEXT_PUBLIC_HEALTHCHECK_API_URL"
          )
          URLS=(
            "${{ steps.deploy_servico_usuarios.outputs.url }}"
            "${{ steps.deploy_servico_busca.outputs.url }}"
            "${{ steps.deploy_servico_monitoramento.outputs.url }}"
            "${{ steps.deploy_servico_agentes_ia.outputs.url }}"
            "${{ steps.deploy_servico_lojas.outputs.url }}"
            "${{ steps.deploy_servico_ofertas.outputs.url }}"
            "${{ steps.deploy_servico_produtos.outputs.url }}"
            "${{ steps.deploy_servico_healthcheck.outputs.url }}"
          )

          for i in ${!URLS[@]}; do
            VAR_NAME=${ENV_VARS[$i]}
            VAR_VALUE=${URLS[$i]}

            if [[ -z "$VAR_VALUE" ]]; then
              echo "Warning: URL for $VAR_NAME is empty. Skipping."
              continue
            fi

            echo "Setting $VAR_NAME for frontend-tester"
            yes | vercel env rm "$VAR_NAME" production --scope="${{ secrets.VERCEL_ORG_ID }}" --token="${{ secrets.VERCEL_TOKEN }}" 2>/dev/null || true
            echo "$VAR_VALUE" | vercel env add "$VAR_NAME" production --scope="${{ secrets.VERCEL_ORG_ID }}" --token="${{ secrets.VERCEL_TOKEN }}"
          done
          cd -

      - name: Checkout repository - Frontend
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Vercel CLI - Frontend
        run: npm install -g vercel@latest
        working-directory: frontend-tester

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: frontend-tester

      - name: Create .env.test.local for testing
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.test.local
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" >> .env.test.local
        working-directory: frontend-tester

      - name: Debug .env.test.local content
        run: cat .env.test.local
        working-directory: frontend-tester

      - name: Run Frontend Tests
        run: npm run test
        working-directory: frontend-tester

      - name: Build Frontend
        run: npm run build
        working-directory: frontend-tester
        env:
          NEXT_PUBLIC_USERS_API_URL: ${{ steps.deploy_servico_usuarios.outputs.url }}
          NEXT_PUBLIC_SEARCH_API_URL: ${{ steps.deploy_servico_busca.outputs.url }}
          NEXT_PUBLIC_MONITORING_API_URL: ${{ steps.deploy_servico_monitoramento.outputs.url }}
          NEXT_PUBLIC_AI_API_URL: ${{ steps.deploy_servico_agentes_ia.outputs.url }}
          NEXT_PUBLIC_STORES_API_URL: ${{ steps.deploy_servico_lojas.outputs.url }}
          NEXT_PUBLIC_OFFERS_API_URL: ${{ steps.deploy_servico_ofertas.outputs.url }}
          NEXT_PUBLIC_PRODUCTS_API_URL: ${{ steps.deploy_servico_produtos.outputs.url }}
          NEXT_PUBLIC_HEALTHCHECK_API_URL: ${{ steps.deploy_servico_healthcheck.outputs.url }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      - name: Deploy Frontend to Vercel
        run: vercel deploy --prod --token "${{ secrets.VERCEL_TOKEN }}" --scope "${{ secrets.VERCEL_ORG_ID }}" --yes --name frontend-tester --build-env NEXT_PUBLIC_USERS_API_URL="${{ steps.deploy_servico_usuarios.outputs.url }}" --build-env NEXT_PUBLIC_SEARCH_API_URL="${{ steps.deploy_servico_busca.outputs.url }}" --build-env NEXT_PUBLIC_MONITORING_API_URL="${{ steps.deploy_servico_monitoramento.outputs.url }}" --build-env NEXT_PUBLIC_AI_API_URL="${{ steps.deploy_servico_agentes_ia.outputs.url }}" --build-env NEXT_PUBLIC_STORES_API_URL="${{ steps.deploy_servico_lojas.outputs.url }}" --build-env NEXT_PUBLIC_OFFERS_API_URL="${{ steps.deploy_servico_ofertas.outputs.url }}" --build-env NEXT_PUBLIC_PRODUCTS_API_URL="${{ steps.deploy_servico_produtos.outputs.url }}" --build-env NEXT_PUBLIC_HEALTHCHECK_API_URL="${{ steps.deploy_servico_healthcheck.outputs.url }}"
